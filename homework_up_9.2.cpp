// homework_up_9.2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Задача 2. Устранение пересечения, задача к уроку "Умные указатели", тема "Продвинутое программирование С++"
//Исправьте в коде ошибку, из-за которой не освобождаются ресурсы. Сообщение destructor called должно быть выведено 2 раза.

#include <iostream>
#include <vector>
#include <memory>

class node
{
public:
    int m_value; // это поле в классе node, видим это значение, которое хранится в этом узле
    std::weak_ptr<node> parent; // это указатель "родитель", видимо у этого узла есть которой-то связанный с ним узел, и нужно, чтобы этот узел знал другом узле, родитиле
                                  // вот это это поле тот программист, который делал класс для этого узла, и написал. 
    //node(int value) : m_value{ value } {};          // это конструктор класса, такая запись раньше не встречалась, перепишем его.
    node(int value)
    {
        m_value = value;                           // вот такой конструктор понятен и привычен
        std::cout << "contructor called\n";        // добавляют в этот конструктор запись о его вызове
    }
    ~node() { std::cout << "destructor called\n"; }        // это деструктор, он вызывается, когда у нас объект класса node выходит из области видимости.
};

int main()
{
    {
        auto node1 = std::make_shared<node>(1);
        auto node2 = std::make_shared<node>(2);
        node1->parent = node2;
        node2->parent = node1;
    }
    return 0;
}
